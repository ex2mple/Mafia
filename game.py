import asyncio
import random
from pprint import pprint
import discord
import json
from cards import *



class Game(discord.Cog):
    def __init__(self, bot):
        self.bot = bot
        self.game_roles = ['Citizen', 'Sherif'] # UPGRADE IF ADD NEW ROLES!!!

    @discord.slash_command()
    async def rules(self, ctx):
        embed = discord.Embed(title='–ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã',
                              description='–í –∏–≥—Ä–µ –µ—Å—Ç—å –≤—Å–µ–≥–æ 3 —Ä–æ–ª–∏: –º–∏—Ä–Ω—ã–π –∂–∏—Ç–µ–ª—å (Citizen), –º–∞—Ñ–∏—è (Mafia) –∏ —à–µ—Ä–∏—Ñ (Sherif)',
                              colour=discord.Colour.blurple())
        embed.add_field(name='–ú–∏—Ä–Ω—ã–µ –∂–∏—Ç–µ–ª–∏',
                        value='–ò–≥—Ä–æ–∫–∏, –≤—ã—á–∏—Å–ª—è—é—â–∏–µ –º–∞—Ñ–∏—é –Ω–∞ –¥–Ω–µ–≤–Ω—ã—Ö –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è—Ö. –ù–∏–∫–∞–∫–∏—Ö —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–µ–π –Ω–µ –∏–º–µ—é—Ç; '
                              '–ø—Ä–æ—Å—Ç–æ –∂–¥—É—Ç –ø–æ–∫–∞ –∏—Ö —É–±—å—é—Ç –ª–æ–ª.')
        embed.add_field(name='–ú–∞—Ñ–∏—è',
                        value='–ü—Ä–æ—è–≤–ª—è–µ—Ç —Å–µ–±—è –ø–æ –±–æ–ª—å—à–µ–π —á–∞—Å—Ç–∏ –≤ –Ω–æ—á–Ω—ã—Ö —É–±–∏–π—Å—Ç–≤–∞—Ö, '
                              '–¥–Ω—ë–º –∂–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—Ç—Å—è –∫–∞–∫ –º–∏—Ä–Ω—ã–µ –≥–æ—Ä–æ–∂–∞–Ω–µ.')
        embed.add_field(name='–®–µ—Ä–∏—Ñ',
                        value='–ò–≥—Ä–∞–µ—Ç –Ω–∞ —Å—Ç–æ—Ä–æ–Ω–µ –º–∏—Ä–Ω—ã—Ö –∂–∏—Ç–µ–ª–µ–π. –ù–æ—á—å—é –ø—Ä–æ—Å—ã–ø–∞–µ—Ç—Å—è –æ—Ç–¥–µ–ª—å–Ω–æ –∏ –º–æ–∂–µ—Ç –ø—Ä–æ–≤–µ—Ä–∏—Ç—å '
                              '–ª—é–±–æ–≥–æ –∏–≥—Ä–æ–∫–∞. –ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –º–æ–∂–µ—Ç –æ–±–Ω–∞—Ä–æ–¥–æ–≤–∞—Ç—å.', inline=False)
        embed.add_field(name='–•–æ–¥ –∏–≥—Ä—ã',
                        value='–ò–≥—Ä–æ–∫–∏ –ø–æ–ª—É—á–∞—é—Ç —Å–≤–æ–∏ —Ä–æ–ª–∏.\n'
                              '–ò–≥—Ä–∞ —Ä–∞–∑–¥–µ–ª–µ–Ω–Ω–∞—è –Ω–∞ 2 —á–∞—Å—Ç–∏: "–¥–µ–Ω—å" –∏ "–Ω–æ—á—å"\n'
                              '–í –ø–µ—Ä–≤—É—é –Ω–æ—á—å –Ω–∏—á–µ–≥–æ –Ω–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç. –ú–∞—Ñ–∏—è –º–æ–∂–µ—Ç –Ω–∞–º–µ—Ç–∏—Ç—å —Å–µ–±–µ "–∂–µ—Ä—Ç–≤—É".\n'
                              '–î–Ω–µ–º –≤—Å–µ –∏–≥—Ä–æ–∫–∏ –æ–±—Å—É–∂–¥–∞—é—Ç –∫—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –ú–∞—Ñ–∏–æ–∑–∏ –∏ –≥–æ–ª–æ—Å—É—é—Ç –∑–∞ –Ω–∏—Ö. –ú–∞—Ñ–∏—è –≤ —Å–≤–æ—é –æ—á–µ—Ä–µ–¥—å –ø—ã—Ç–∞–µ—Ç—Å—è –¥–æ–∫–∞–∑–∞—Ç—å —Å–≤–æ—é –Ω–µ–≤–∏–Ω–æ–≤–Ω–æ—Å—Ç—å.\n'
                              '–ï—Å–ª–∏ –≥–æ–ª–æ—Å–∞ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–∏–ª–∏—Å—å –ø–æ—Ä–æ–≤–Ω—É, –Ω–∏–∫—Ç–æ –Ω–µ –≤—ã–±—ã–≤–∞–µ—Ç.\n'
                              '–ò–≥—Ä–∞ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è –¥–æ –ø–æ–ª–Ω–æ–π –ø–æ–±–µ–¥—ã –æ–¥–Ω–æ–π –∏–∑ –∫–æ–º–∞–Ω–¥, –∫–æ–≥–¥–∞ —Å–æ–ø–µ—Ä–Ω–∏–∫–∏ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∏–ª–∏ –ø–æ—Å–∞–∂–µ–Ω—ã –∏–ª–∏ —É–±–∏—Ç—ã.')

        await ctx.respond(embed=embed)


    async def start_game(self, interaction: discord.Interaction) -> None:
        await self.give_role(interaction)
        while True:
            vote_message = await self.night(interaction)
            await asyncio.sleep(10)  # 10 seconds to vote
            await self.vote(interaction, vote_message)
            if await self.check_win(interaction) == 1:
                break
            vote_message = await self.day(interaction)
            await asyncio.sleep(15)  # 15 seconds to vote
            await self.vote(interaction, vote_message)
            if await self.check_win(interaction) == 1:
                break


    async def get_mafia(self, your_room: dict, interaction: discord.Interaction) -> list:
        ids = []
        for player in your_room['players_roles']:
            if player['role'] == 'Mafia':
                ids.append(interaction.guild.get_member(player['id']))
        return ids


    async def get_players(self, your_room: dict, interaction: discord.Interaction) -> list:
        players = []
        for player in your_room['players_roles']:
            players.append(interaction.guild.get_member(player['id']))
        return players


    async def give_role(self, interaction: discord.Interaction) -> None:
        with open('db.json', 'r', encoding='UTF-8') as file:
            data = json.load(file)

        rooms, room = get_room(interaction, data)

        roles = get_cards(len(room['players']))
        mafia_thread = interaction.guild.get_thread(room['mafia_id'])

        for player in room['players_roles']:
            choice = random.choice(roles)
            discord_player = interaction.guild.get_member(player["id"])

            if choice == 'Mafia':
                await mafia_thread.add_user(discord_player)
                room['mafia_count'] += 1
            if choice in self.game_roles:
                room['citizen_count'] += 1

            player['role'] = choice
            roles.remove(choice)

        with open('db.json', 'w', encoding='UTF-8') as file:
            json.dump(data, file, indent=4)


    async def day(self, interaction: discord.Interaction) -> discord.Message:
        """

        :param interaction:
        :return:
        """
        with open('db.json', 'r', encoding='UTF-8') as file:
            data = json.load(file)

        rooms, room = get_room(interaction, data)
        voice_channel = interaction.guild.get_channel(room['voice_channel'])

        if voice_channel:
            for player in room['players']:
                player = interaction.guild.get_member(player)
                await voice_channel.set_permissions(player, speak=True)

        channel = interaction.guild.get_thread(room['room_id'])
        await channel.send('–ì–æ—Ä–æ–¥ –ø—Ä–æ—Å—ã–ø–∞–µ—Ç—Å—è!')

        players = [player.mention for player in await self.get_players(room, interaction)]
        emoji = ['1Ô∏è‚É£', '2Ô∏è‚É£', '3Ô∏è‚É£', '4Ô∏è‚É£', '5Ô∏è‚É£', '6Ô∏è‚É£', '7Ô∏è‚É£', '8Ô∏è‚É£', '9Ô∏è', 'üîü']
        embed = discord.Embed(title='–ö—Ç–æ –ø–æ –≤–∞—à–µ–º—É —è–≤–ª–µ—è–µ—Ç—Å—è –º–∞—Ñ–∏–µ–π?',
                              description='–ü—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ —Ä–µ–∞–∫—Ü–∏—é —Å –Ω—É–∂–Ω—ã–º –Ω–æ–º–µ—Ä–æ–º',
                              color=discord.Colour.red())
        embed.add_field(name='–ò–≥—Ä–æ–∫–∏', value='\n'.join(map(lambda x: f"{x[0]} {x[1]}", list(zip(emoji, players)))))

        vote_message = await channel.send(embed=embed, content='–£ –≤–∞—Å –µ—Å—Ç—å 45 —Å–µ–∫—É–Ω–¥ –Ω–∞ —Ä–∞–∑–¥—É–º–∏–µ –∏ 15 —Å–µ–∫—É–Ω–¥ –Ω–∞ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ!')

        await asyncio.sleep(45) # 45 seconds to think

        await vote_message.edit(content='–ù–∞—á–∏–Ω–∞–π—Ç–µ –≥–æ–ª–æ—Å–æ–≤–∞—Ç—å!')

        for i in range(len(players)):
            await vote_message.add_reaction(emoji[i])

        return vote_message


    async def night(self, interaction: discord.Interaction) -> discord.Message:
        """

        :param interaction:
        :return: vote_message: discord.Message
        """
        with open('db.json', 'r', encoding='UTF-8') as file:
            data = json.load(file)

        rooms, room = get_room(interaction, data)
        voice_channel = interaction.guild.get_channel(room['voice_channel'])

        if voice_channel:
            for player in room['players']:
                player = interaction.guild.get_member(player)
                await voice_channel.set_permissions(player, speak=False)

        channel = interaction.guild.get_thread(room['room_id'])
        mafia_channel = interaction.guild.get_thread(room['mafia_id'])
        await channel.send('–ì–æ—Ä–æ–¥ –∑–∞—Å—ã–ø–∞–µ—Ç, –ø—Ä–æ—Å—ã–ø–∞–µ—Ç—Å—è –º–∞—Ñ–∏—è!')

        players = [player.mention for player in await self.get_players(room, interaction)]
        emoji = ['1Ô∏è‚É£', '2Ô∏è‚É£', '3Ô∏è‚É£', '4Ô∏è‚É£', '5Ô∏è‚É£', '6Ô∏è‚É£', '7Ô∏è‚É£', '8Ô∏è‚É£', '9Ô∏è', 'üîü']
        embed = discord.Embed(title='–ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –∑–∞ –∂–µ—Ä—Ç–≤—É',
                              description='–ü—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ —Ä–µ–∞–∫—Ü–∏—é —Å –Ω—É–∂–Ω—ã–º –Ω–æ–º–µ—Ä–æ–º',
                              color=discord.Colour.red())
        embed.add_field(name='–ñ–µ—Ä—Ç–≤—ã', value='\n'.join(map(lambda x: f"{x[0]} {x[1]}", list(zip(emoji, players)))))

        vote_message = await mafia_channel.send(content='–£ –≤–∞—Å –µ—Å—Ç—å 20 —Å–µ–∫—É–Ω–¥ –Ω–∞ —Ä–∞–∑–¥—É–º–∏–µ –∏ 10 —Å–µ–∫—É–Ω–¥ –Ω–∞ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ!', embed=embed)

        await asyncio.sleep(20) # 20 seconds to think

        await vote_message.edit(content='–ù–∞—á–∏–Ω–∞–π—Ç–µ –≥–æ–ª–æ—Å–æ–≤–∞—Ç—å!')

        for i in range(len(players)):
            await vote_message.add_reaction(emoji[i])

        return vote_message


    async def vote(self, interaction: discord.Interaction, vote_message: discord.Message) -> None:
        """

        :param interaction:
        :param vote_message:
        :return:
        """
        with open('db.json', 'r', encoding='UTF-8') as file:
            data = json.load(file)

        rooms, room = get_room(interaction, data)

        vote_message = self.bot.get_message(vote_message.id)
        channel = interaction.guild.get_thread(room['room_id'])

        players = [player.id for player in await self.get_players(room, interaction)]
        reactions_count = [reaction.count for reaction in vote_message.reactions]
        sorted_rc: list = sorted(reactions_count)

        if sorted_rc.index(max(sorted_rc)) != len(sorted_rc) - 1:
            embed = discord.Embed(title='–ò—Ç–æ–≥–∏ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è',
                                  description=f'–ú–Ω–µ–Ω–∏—è —Ä–∞–∑–¥–µ–ª–∏–ª–∏—Å—å. –ù–∏–∫–æ–≥–æ –Ω–µ —É–±–∏–ª–∏!',
                                  color=discord.Colour.blurple())
            await channel.send(embed=embed)
            return

        winner = reactions_count.index(max(reactions_count))

        for player in room['players_roles']:
            if player['id'] == players[winner]:
                role, id = player['role'], player['id']
                room['players_roles'].remove(player)

        player_count = 'mafia_count' if role == 'Mafia' else 'citizen_count'
        room[player_count] -= 1

        embed = discord.Embed(title='–ò—Ç–æ–≥–∏ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è',
                              description=f'–ë—ã–ª —É–±–∏—Ç: {interaction.guild.get_member(id).mention}',
                              color=discord.Colour.red() if role != 'Mafia' else discord.Colour.green())
        embed.add_field(name='–ï–≥–æ —Ä–æ–ª—å', value=role)
        embed.add_field(name='–ú–∞—Ñ–∏–æ–∑–∏ –æ—Å—Ç–∞–ª–æ—Å—å', value=f'{room["mafia_count"]}',
                        inline=False)

        await channel.send(embed=embed)
        await interaction.channel.set_permissions(interaction.guild.get_member(id), send_messages=False)

        with open('db.json', 'w', encoding='UTF-8') as file:
            json.dump(data, file, indent=4)


    async def check_win(self, interaction: discord.Interaction) -> int:
        """

        :param interaction: discord.Interaction
        :return: int
        """
        with open('db.json', 'r', encoding='UTF-8') as file:
            data = json.load(file)

        rooms, room = get_room(interaction, data)

        channel = interaction.guild.get_thread(room['room_id'])

        if room['mafia_count'] == 0:
            embed = discord.Embed(title='–ú–∏—Ä–Ω—ã–µ –∂–∏—Ç–µ–ª–∏ –ø–æ–±–µ–¥–∏–ª–∏!', color=discord.Colour.green())
        elif room['citizen_count'] == 0: # –í–ï–†–ù–£–¢–¨ –ù–ê 1
            embed = discord.Embed(title='–ú–∞—Ñ–∏—è –ø–æ–±–µ–¥–∏–ª–∞!', description='\n'.join(
                                  [mafia.mention for mafia in await self.get_mafia(room, interaction)]),
                                  color=discord.Colour.red())
        else:
            return 0

        await channel.send(embed=embed)
        await asyncio.sleep(10)

        await interaction.guild.get_thread(room['mafia_id']).delete()
        await interaction.guild.get_thread(room['room_id']).delete()

        for player in room['players']:
            player = interaction.guild.get_member(player)
            await interaction.channel.set_permissions(player, add_reactions=True, send_messages=True)

        rooms.remove(room)

        with open('db.json', 'w', encoding='UTF-8') as file:
            json.dump(data, file, indent=4)

        return 1


def setup(bot):
    bot.add_cog(Game(bot))
